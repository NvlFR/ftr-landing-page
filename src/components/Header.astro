---
// src/components/Header.astro
const navLinks = [
  { href: "#layanan", text: "Layanan" },
  { href: "#fitur", text: "Keunggulan" },
  { href: "#proses", text: "Proses" },
  { href: "#faq", text: "FAQ" },
];
---

<header class="sticky top-0 z-50 bg-white/90 dark:bg-gray-900/90 backdrop-blur-md border-b border-gray-200/50 dark:border-gray-800/50 transition-all duration-300">
  <div class="container mx-auto px-6 h-16 md:h-20 flex items-center justify-between">
    <!-- Logo -->
    <a href="/" class="flex items-center space-x-2 group">
      <div class="w-10 h-10 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-lg flex items-center justify-center text-white font-bold text-xl shadow-md group-hover:shadow-lg transition-all duration-300">
        FTR
      </div>
      <span class="text-xl font-bold text-slate-800 dark:text-white">FTR<span class="text-blue-600">Tech</span></span>
    </a>

    <!-- Desktop Navigation -->
    <nav class="hidden lg:flex items-center space-x-1">
      {navLinks.map((link, index) => (
        <a 
          href={link.href} 
          class="relative px-4 py-2 text-slate-700 dark:text-gray-300 font-medium rounded-lg transition-all duration-300 group/nav-link hover:text-blue-600 dark:hover:text-blue-400"
        >
          {link.text}
          <span class="absolute bottom-0 left-1/2 w-0 h-0.5 bg-blue-600 transition-all duration-300 group-hover/nav-link:left-0 group-hover/nav-link:w-full"></span>
          <span class="opacity-0 group-hover/nav-link:opacity-100 absolute -inset-2 bg-blue-100 dark:bg-blue-900/20 rounded-lg -z-10 transition-opacity duration-300"></span>
        </a>
      ))}
      <a 
        href="#kontak" 
        class="ml-4 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-semibold py-2.5 px-5 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 transform hover:-translate-y-0.5 flex items-center space-x-2"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
          <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
        </svg>
        <span>Hubungi Kami</span>
      </a>
    </nav>

    <!-- Mobile Menu Button -->
    <button 
      id="menu-btn" 
      class="lg:hidden flex flex-col justify-center items-center w-10 h-10 relative focus:outline-none group"
      aria-label="Toggle menu"
    >
      <span class="sr-only">Toggle menu</span>
      <span class="block absolute w-6 h-0.5 bg-slate-800 dark:bg-white transition-all duration-300 transform group-[.active]:rotate-45 group-[.active]:translate-y-0"></span>
      <span class="block absolute w-6 h-0.5 bg-slate-800 dark:bg-white transition-all duration-300 transform group-[.active]:opacity-0"></span>
      <span class="block absolute w-6 h-0.5 bg-slate-800 dark:bg-white transition-all duration-300 transform group-[.active]:-rotate-45 group-[.active]:-translate-y-0"></span>
      
      <span class="block absolute w-6 h-0.5 bg-slate-800 dark:bg-white transition-all duration-300 transform translate-y-1.5 group-[.active]:translate-y-0"></span>
      <span class="block absolute w-6 h-0.5 bg-slate-800 dark:bg-white transition-all duration-300 transform -translate-y-1.5 group-[.active]:-translate-y-0"></span>
    </button>
  </div>

  <!-- Mobile Navigation -->
  <div 
    id="mobile-menu" 
    class="lg:hidden hidden bg-white/95 dark:bg-gray-900/95 backdrop-blur-lg border-t border-gray-200/50 dark:border-gray-800/50 transition-all duration-300 ease-out overflow-hidden"
  >
    <nav class="flex flex-col p-4 space-y-1">
      {navLinks.map((link, index) => (
        <a 
          href={link.href} 
          class="px-4 py-3 text-slate-700 dark:text-gray-300 font-medium rounded-lg transition-all duration-300 hover:bg-blue-50 dark:hover:bg-gray-800 hover:text-blue-600 dark:hover:text-blue-400 hover:pl-6"
          style={`transition-delay: ${index * 50}ms`}
        >
          {link.text}
        </a>
      ))}
      <a 
        href="#kontak" 
        class="mt-2 bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 text-white font-semibold py-3 px-4 rounded-lg text-center transition-all duration-300 flex items-center justify-center space-x-2"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
          <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
        </svg>
        <span>Hubungi Kami</span>
      </a>
    </nav>
  </div>
</header>

<script is:inline>
  // Enhanced script for mobile menu with animations
  document.addEventListener('DOMContentLoaded', () => {
    const menuBtn = document.getElementById('menu-btn');
    const mobileMenu = document.getElementById('mobile-menu');
    
    // Function to toggle menu
    const toggleMenu = () => {
      const isExpanded = menuBtn.getAttribute('aria-expanded') === 'true';
      menuBtn.classList.toggle('active');
      mobileMenu.classList.toggle('hidden');
      menuBtn.setAttribute('aria-expanded', !isExpanded);
      
      // Toggle body scroll
      document.body.style.overflow = isExpanded ? '' : 'hidden';
    };
    
    // Initialize aria attributes
    menuBtn.setAttribute('aria-expanded', 'false');
    menuBtn.setAttribute('aria-controls', 'mobile-menu');
    
    // Toggle menu on button click
    menuBtn.addEventListener('click', toggleMenu);
    
    // Close menu when clicking on links
    mobileMenu.addEventListener('click', (event) => {
      if (event.target.tagName === 'A') {
        toggleMenu();
      }
    });
    
    // Close menu when clicking outside
    document.addEventListener('click', (event) => {
      const isClickInside = menuBtn.contains(event.target) || mobileMenu.contains(event.target);
      if (!isClickInside && !mobileMenu.classList.contains('hidden')) {
        toggleMenu();
      }
    });
    
    // Close menu on escape key
    document.addEventListener('keydown', (event) => {
      if (event.key === 'Escape' && !mobileMenu.classList.contains('hidden')) {
        toggleMenu();
      }
    });
    
    // Add scroll effect to header
    let lastScrollY = window.scrollY;
    const header = document.querySelector('header');
    
    window.addEventListener('scroll', () => {
      if (window.scrollY > 100) {
        header.classList.add('shadow-md');
      } else {
        header.classList.remove('shadow-md');
      }
      
      // Hide header on scroll down for mobile
      if (window.innerWidth < 1024) {
        if (window.scrollY > lastScrollY && window.scrollY > 100) {
          header.style.transform = 'translateY(-100%)';
        } else {
          header.style.transform = 'translateY(0)';
        }
        lastScrollY = window.scrollY;
      }
    });
  });
</script>

<style is:global>
  /* Smooth scrolling for the entire page */
  html {
    scroll-behavior: smooth;
  }
  
  /* Animation for mobile menu items */
  #mobile-menu a {
    opacity: 0;
    transform: translateX(-20px);
    transition: opacity 0.3s ease, transform 0.3s ease, padding-left 0.2s ease;
  }
  
  #mobile-menu:not(.hidden) a {
    opacity: 1;
    transform: translateX(0);
  }
</style>